include: package:very_good_analysis/analysis_options.yaml

analyzer:
  enable-experiment:
    - records
    - patterns
    - sealed-class
  exclude:
    - build/**
    - '**/*.g.dart'
    - '**/*.freezed.dart'
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  errors:
    close_sinks: ignore
    missing_required_param: error
    missing_return: error
    record_literal_one_positional_no_trailing_comma: error
    avoid_print: warning
    public_member_api_docs: ignore
    implicit_call_tearoffs: ignore
    require_trailing_commas: ignore
    inference_failure_on_instance_creation: ignore
    unawaited_futures: error
    sort_constructors_first: ignore
    parameter_assignments: ignore
    use_if_null_to_convert_nulls_to_bools: warning
    unrelated_type_equality_checks: error
    invalid_assignment: error
#   Temporary:
    use_string_buffers: warning
    lines_longer_than_80_chars: ignore
    field_initializer_not_assignable: warning
    return_of_invalid_type: warning
    non_bool_operand: warning

linter:
  rules:
    - cancel_subscriptions
    - prefer_const_declarations
    - always_declare_return_types
    - avoid_empty_else
    - prefer_final_fields
    - prefer_final_locals
    - prefer_null_aware_operators
    - avoid_slow_async_io
    - avoid_type_to_string
    - avoid_types_as_parameter_names
    - close_sinks
    - collection_methods_unrelated_type
    - omit_local_variable_types
    - always_put_required_named_parameters_first
    - always_put_control_body_on_new_line
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_bool_literals_in_conditional_expressions
    - avoid_double_and_int_checks
    - avoid_field_initializers_in_const_classes
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_positional_boolean_parameters
    - avoid_relative_lib_imports
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null
    - avoid_single_cascade_in_expression_statements
    - avoid_unused_constructor_parameters
    - await_only_futures
    - camel_case_types
    - comment_references
    - constant_identifier_names
    - control_flow_in_finally
    - directives_ordering
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - hash_and_equals
    - implementation_imports
    - invariant_booleans
    - join_return_with_assignment
    - library_names
    - library_prefixes
    - literal_only_boolean_expressions
    - no_duplicate_case_values
    - non_constant_identifier_names
    - null_closures
    - package_api_docs
    - package_names
    - package_prefixed_library_names
    - parameter_assignments
    - prefer_adjacent_string_concatenation
    - prefer_asserts_in_initializer_lists
    - prefer_collection_literals
    - prefer_conditional_assignment
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_literals_to_create_immutables
    - prefer_constructors_over_static_methods
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_foreach
    - prefer_generic_function_type_aliases
    - prefer_interpolation_to_compose_strings
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_typing_uninitialized_variables
    - recursive_getters
    - slash_for_doc_comments
    #    - sort_constructors_first
    - sort_unnamed_constructors_first
    - test_types_in_equals
    - throw_in_finally
    - type_annotate_public_apis
    - type_init_formals
    - unawaited_futures
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_statements
    - unnecessary_this
    - unrelated_type_equality_checks
    - use_rethrow_when_possible
    - use_string_buffers
    - use_to_and_as_if_applicable
    - valid_regexps
    - void_checks
    - public_member_api_docs
